// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AgentTool {
  DUCK_DUCK_GO_SEARCH
  SEMANTIC_SCHOLER
  WIKIDATA
  WIKIPEDIA
  YAHOO_FINANCE
  YUOUTUBE_SEARCH
  ARXIV
  PUBMED
}

model Agent {
  id              Int         @id @default(autoincrement())
  role            String
  goal            String
  backstory       String?
  tools           AgentTool[] @default([])
  allowDelegation Boolean     @default(false)
  verbose         Boolean     @default(false)
  memory          Boolean     @default(false)
  image           String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  missions Mission[]
}

enum MissionProcess {
  SEQUENTIAL
  HIERARCHICAL
}

model Mission {
  id      Int            @id @default(autoincrement())
  name    String
  crew    Agent[]
  tasks   Json[]         @default([])
  verbose Boolean        @default(false)
  process MissionProcess @default(SEQUENTIAL)
  result  String         @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Add these models to your existing schema.prisma file

enum MarketplaceItemType {
  AGENT
  TOOL
  WORKFLOW
  DATASET
}

model MarketplaceItem {
  id          Int                @id @default(autoincrement())
  type        MarketplaceItemType
  name        String
  description String
  author      String
  version     String
  downloads   Int                @default(0)
  rating      Float              @default(0)
  price       Float?             // null means free
  tags        String[]
  image       String?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  // Relations
  reviews     MarketplaceReview[]
  deployments MarketplaceDeployment[]
}

model MarketplaceReview {
  id          Int            @id @default(autoincrement())
  itemId      Int
  rating      Float
  comment     String?
  authorId    Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relations
  item        MarketplaceItem @relation(fields: [itemId], references: [id])
}

model MarketplaceDeployment {
  id          Int            @id @default(autoincrement())
  itemId      Int
  userId      Int
  status      String         // e.g., "pending", "active", "failed"
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relations
  item        MarketplaceItem @relation(fields: [itemId], references: [id])
}
